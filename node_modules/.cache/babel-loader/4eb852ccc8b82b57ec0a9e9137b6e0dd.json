{"ast":null,"code":"var _jsxFileName = \"/home/adib/code/rhino-front/rhino/src/all-pages/Context.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Context = /*#__PURE__*/createContext();\nexport let AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [token, setToken] = useState();\n  let [data, setData] = useState();\n  let lifespan = 1000;\n  let tokenrefresh = () => {\n    console.log('hi');\n  };\n  useEffect(() => {\n    let refreshTimeOut = setTimeout(tokenrefresh, lifespan);\n    return () => {\n      clearInterval(refreshTimeOut);\n    };\n  }, []);\n  let usersetter = token => {\n    let userdata = jwt_decode(token.access);\n    console.log(userdata);\n    if (userdata) {\n      setData(userdata);\n      if (data) {\n        console.log(data);\n      }\n    }\n  };\n  let tokensetter = token => {\n    if (token) {\n      setToken(token);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      'function': tokensetter,\n      'token': token,\n      'user': data,\n      'usersetter': usersetter\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"wS3MYv5fiiWjU0G9NFqNhBJu3yM=\");\n_c = AuthProvider;\nexport default Context;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwt_decode","Context","AuthProvider","children","token","setToken","data","setData","lifespan","tokenrefresh","console","log","refreshTimeOut","setTimeout","clearInterval","usersetter","userdata","access","tokensetter"],"sources":["/home/adib/code/rhino-front/rhino/src/all-pages/Context.js"],"sourcesContent":["import React,{createContext,useState,useEffect} from 'react'\nimport jwt_decode from 'jwt-decode'\nlet Context = createContext()\n\nexport let AuthProvider = ({children}) =>{\n\n\n\tconst [token, setToken] = useState()\n\tlet [data,setData]= useState()\n\tlet lifespan = 1000\n\tlet tokenrefresh=()=>{\n\t\tconsole.log('hi')\n\t}\n    useEffect(() => {\n    \tlet refreshTimeOut = setTimeout(tokenrefresh,lifespan)\n    \treturn () => {\n    \t\tclearInterval(refreshTimeOut)\n    \t};\n    }, [])\n\n\n\tlet usersetter=(token)=>{\n\t\tlet userdata = jwt_decode(token.access)\n\t\tconsole.log(userdata)\n\t\tif(userdata){\n\t\tsetData(userdata)\n\t\t   if(data){\n\t\t     console.log(data)\n\n\t\t   }\n\t    }\n           \n\t}\n\n\n\tlet tokensetter=(token)=>{\n\n\t\tif(token){\n\t\tsetToken(token)\n       }\n\t}\n\n\n\n\treturn(\n        <Context.Provider value={{'function':tokensetter,'token':token,'user':data,'usersetter':usersetter}} >\n        \t{children}\n        </Context.Provider>\n\t)\n}\n\nexport default Context"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,aAAa,EAACC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC5D,OAAOC,UAAU,MAAM,YAAY;AAAA;AACnC,IAAIC,OAAO,gBAAGJ,aAAa,EAAE;AAE7B,OAAO,IAAIK,YAAY,GAAG,QAAe;EAAA;EAAA,IAAd;IAACC;EAAQ,CAAC;EAGpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,EAAE;EACpC,IAAI,CAACQ,IAAI,EAACC,OAAO,CAAC,GAAET,QAAQ,EAAE;EAC9B,IAAIU,QAAQ,GAAG,IAAI;EACnB,IAAIC,YAAY,GAAC,MAAI;IACpBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EAClB,CAAC;EACEZ,SAAS,CAAC,MAAM;IACf,IAAIa,cAAc,GAAGC,UAAU,CAACJ,YAAY,EAACD,QAAQ,CAAC;IACtD,OAAO,MAAM;MACZM,aAAa,CAACF,cAAc,CAAC;IAC9B,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAGT,IAAIG,UAAU,GAAEX,KAAK,IAAG;IACvB,IAAIY,QAAQ,GAAGhB,UAAU,CAACI,KAAK,CAACa,MAAM,CAAC;IACvCP,OAAO,CAACC,GAAG,CAACK,QAAQ,CAAC;IACrB,IAAGA,QAAQ,EAAC;MACZT,OAAO,CAACS,QAAQ,CAAC;MACd,IAAGV,IAAI,EAAC;QACNI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;MAEnB;IACA;EAEJ,CAAC;EAGD,IAAIY,WAAW,GAAEd,KAAK,IAAG;IAExB,IAAGA,KAAK,EAAC;MACTC,QAAQ,CAACD,KAAK,CAAC;IACV;EACN,CAAC;EAID,oBACO,QAAC,OAAO,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAC,UAAU,EAACc,WAAW;MAAC,OAAO,EAACd,KAAK;MAAC,MAAM,EAACE,IAAI;MAAC,YAAY,EAACS;IAAU,CAAE;IAAA,UAClGZ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACS;AAE3B,CAAC;AAAA,GA7CUD,YAAY;AAAA,KAAZA,YAAY;AA+CvB,eAAeD,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}